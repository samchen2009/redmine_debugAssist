# This is an example yml to show how a filter looks like
---
filter:
  name:  filter_anr
  input: #define what input this filter accept.
    - matches #can connect with another filter's output.
    - log #only accept a full log or section. The 'section' below will do sanity check.
    - symptom #Tell system that whether this filter will responde to smart search.
  section: logcat  #This filter can only apply to kernel log
  filter_type: match #Match keyword or run a shell script?
  matches: # List all the regexp strings to match.
    patterns:
      - name: ANR
        regexp: /ANR/i
    relations: ANR
  shell: # If not nil, will run shell script instead of matches.
    - 
  output:
    owner: anr@yyy.com  #
    symptom: ANR # system may check whether system have other filters for this symptom if you define.
    log: yes #output the log 
